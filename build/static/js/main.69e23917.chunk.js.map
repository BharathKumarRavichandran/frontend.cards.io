{"version":3,"sources":["game-engine/components/Hand/Hand.module.css","game-engine/components/Card/Card.module.css","game-engine/components/Deck.js","game-engine/components/CardColumn/CardColumn.js","game-engine/components/Card/Card.js","game-engine/components/Hand/Hand.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Deck","cards","this","deck","num","shape","pop","i","length","offset","Math","floor","random","temp","splice","push","reverse","CardColumn","props","display","isNaN","parseInt","value","ranks","col1","col2","settings","column","order","map","item","key","className","style","gridColumn","fontSize","suit","left","gridRow","leftSuit","right","transform","translateX","rightSuit","Card","C","D","H","S","cardColor","color","id","classes","card_container","get_angle","index","num_cards","single","ceil","top","Hand","hand","toString","weights","J","Q","K","A","includes","sort","a","b","hand_container","hand_cards_container","card","App","deck1","shuffle","deal","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8kBACAA,EAAOC,QAAU,CAAC,qBAAuB,mCAAmC,eAAiB,+B,oBCA7FD,EAAOC,QAAU,CAAC,eAAiB,+B,gMCwNpBC,E,WAxNX,WAAYC,GAAQ,oBAChBC,KAAKC,KAAOF,GAAS,CACjB,CACIG,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IAAK,IACLC,MAAO,KAEX,CACID,IA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","file":"static/js/main.69e23917.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hand_cards_container\":\"Hand_hand_cards_container__1feUK\",\"hand_container\":\"Hand_hand_container__2kfgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_container\":\"Card_card_container__2g3qq\"};","class Deck {\n    constructor(cards) {\n        this.deck = cards || [\n            {\n                num: 'A',\n                shape: 'S',\n            },\n            {\n                num: 'A',\n                shape: 'H',\n            },\n            {\n                num: 'A',\n                shape: 'D',\n            },\n            {\n                num: 'A',\n                shape: 'C',\n            },\n            {\n                num: '2',\n                shape: 'S',\n            },\n            {\n                num: '2',\n                shape: 'H',\n            },\n            {\n                num: '2',\n                shape: 'D',\n            },\n            {\n                num: '2',\n                shape: 'C',\n            },\n            {\n                num: '3',\n                shape: 'S',\n            },\n            {\n                num: '3',\n                shape: 'H',\n            },\n            {\n                num: '3',\n                shape: 'D',\n            },\n            {\n                num: '3',\n                shape: 'C',\n            },\n            {\n                num: '4',\n                shape: 'S',\n            },\n            {\n                num: '4',\n                shape: 'H',\n            },\n            {\n                num: '4',\n                shape: 'D',\n            },\n            {\n                num: '4',\n                shape: 'C',\n            },\n            {\n                num: '5',\n                shape: 'S',\n            },\n            {\n                num: '5',\n                shape: 'H',\n            },\n            {\n                num: '5',\n                shape: 'D',\n            },\n            {\n                num: '5',\n                shape: 'C',\n            },\n            {\n                num: '6',\n                shape: 'S',\n            },\n            {\n                num: '6',\n                shape: 'H',\n            },\n            {\n                num: '6',\n                shape: 'D',\n            },\n            {\n                num: '6',\n                shape: 'C',\n            },\n            {\n                num: '7',\n                shape: 'S',\n            },\n            {\n                num: '7',\n                shape: 'H',\n            },\n            {\n                num: '7',\n                shape: 'D',\n            },\n            {\n                num: '7',\n                shape: 'C',\n            },\n            {\n                num: '8',\n                shape: 'S',\n            },\n            {\n                num: '8',\n                shape: 'H',\n            },\n            {\n                num: '8',\n                shape: 'D',\n            },\n            {\n                num: '8',\n                shape: 'C',\n            },\n            {\n                num: '9',\n                shape: 'S',\n            },\n            {\n                num: '9',\n                shape: 'H',\n            },\n            {\n                num: '9',\n                shape: 'D',\n            },\n            {\n                num: '9',\n                shape: 'C',\n            },\n            {\n                num: 'J',\n                shape: 'S',\n            },\n            {\n                num: 'J',\n                shape: 'H',\n            },\n            {\n                num: 'J',\n                shape: 'D',\n            },\n            {\n                num: 'J',\n                shape: 'C',\n            },\n            {\n                num: 'Q',\n                shape: 'S',\n            },\n            {\n                num: 'Q',\n                shape: 'H',\n            },\n            {\n                num: 'Q',\n                shape: 'D',\n            },\n            {\n                num: 'Q',\n                shape: 'C',\n            },\n            {\n                num: 'K',\n                shape: 'S',\n            },\n            {\n                num: 'K',\n                shape: 'H',\n            },\n            {\n                num: 'K',\n                shape: 'D',\n            },\n            {\n                num: 'K',\n                shape: 'C',\n            },\n        ];\n    }\n\n    deal() {\n        return this.deck.pop();\n    }\n\n    shuffle() {\n        for (let i = 0; i < this.deck.length; i++) {\n            // 1. Select a random card from the deck\n            const offset = Math.floor(Math.random() * this.deck.length);\n            const temp = this.deck[offset];\n            // 2. remove the card from the deck\n            this.deck.splice(offset, 1);\n            // 3. place the card on the top of the deck\n            this.deck.push(temp);\n            // 4. every 3rd shuffle, reverse the deck\n            if (i % 3 === 0) this.deck.reverse();\n        }\n    }\n}\n\nexport default Deck;\n","import React from 'react';\nimport './CardColumn.css';\nimport ranks from './ranks';\n\nconst CardColumn = props => {\n    const display = isNaN(parseInt(props.value))\n        ? [\n            [ranks[1].col1], \n            [ranks[1].col2]\n        ]\n        : [\n            [ranks[props.value].col1],\n            [ranks[props.value].col2]\n        ];\n\n    const settings = {display: 0, column: '2'};\n\n    switch (props.order) {\n        case '2':\n            settings.display = 1;\n            settings.column = '3';\n            break;\n        case '3':\n            settings.display = 0;\n            settings.column = '4';\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <>\n            {' '}\n            {display[settings.display][0].map((item) => {\n                return (\n                    <div key={item} className={item} style={{gridColumn: settings.column, fontSize: '1.7em'}}>\n                        {props.suit}\n                    </div>\n                );\n            })}{' '}\n        </>\n    );\n}\n\nexport default CardColumn;\n","import React from 'react';\nimport CardColumn from '../CardColumn/CardColumn.js';\nimport classes from './Card.module.css';\n\nconst left = {\n    gridColumn: '1',\n    gridRow: '1',\n};\n\nconst leftSuit = {\n    gridColumn: '1',\n    gridRow: '2',\n};\n\nconst right = {\n    gridColumn: '5',\n    gridRow: '13',\n    transform: `rotate(-180deg)`,\n    translateX: `(-8px)`,\n};\n\nconst rightSuit = {\n    gridColumn: '5',\n    gridRow: '12',\n    transform: `rotate(-180deg)`,\n    translateX: `(-8px)`,\n};\n\nexport const Card = (props) => {\n    const value = props.value.num === '0' ? '10' : props.value.num;\n    const suit = {\n        C: '♣',\n        D: '♦',\n        H: '♥',\n        S: '♠',\n    }[props.value.shape];\n    const cardColor = suit === '♥' || suit === '♦' || suit === '♡' || suit === '♢' ? {color: 'red'} : {color: 'black'};\n\n    return (\n        <div id={value + suit} className={classes.card_container} style={{...cardColor, ...props.style}}>\n            <div style={left}>{value}</div>\n            <div style={leftSuit}>{suit}</div>\n            <CardColumn order=\"1\" value={value} suit={suit} />\n            <CardColumn order=\"2\" value={value} suit={suit} />\n            <CardColumn order=\"3\" value={value} suit={suit} />\n            <div style={rightSuit}>{suit}</div>\n            <div style={right}>{value}</div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card.js';\n\nimport classes from './Hand.module.css';\n\nconst get_angle = (index, num_cards) => {\n    const single = Math.ceil(120 / num_cards);\n    if (num_cards % 2 === 0) {\n        if (index < num_cards / 2)\n            return {\n                transform: `translate(\n                    ${num_cards * 10 * (num_cards / 2 - index - 1)}px, \n                    ${num_cards * 2 * (num_cards / 2 - index - 1)}px\n                    ) \n                    rotate(-${(num_cards / 2 - index - 1) * single}deg)`\n            };\n        return {\n            transform: `translate(\n                ${-num_cards * 10 * (index + 1 - num_cards / 2)}px,\n                ${num_cards * 2 * (index - num_cards / 2)}px\n                )\n                rotate(${(index - num_cards / 2) * single}deg)`,\n        };\n    }\n    if (index < num_cards / 2)\n        return {\n            transform: `rotate(-${(num_cards / 2 - index - 1) * single}deg)`,\n            left: num_cards * 10 * (num_cards / 2 - index - 1),\n            top: num_cards * 2 * (num_cards / 2 - index - 1),\n        };\n    return {\n        transform: `rotate(${(index - num_cards / 2) * single}deg)`,\n        left: -num_cards * 10 * (index + 1 - num_cards / 2),\n        top: num_cards * 2 * (index + 1 - num_cards / 2),\n    };\n};\n\nconst Hand = (props) => {\n    sort(props.cards);\n    const num_cards = props.cards.length;\n    return (\n        <div className={classes.hand_container}>\n            <div className={classes.hand_cards_container}>\n                {props.cards.map((card, index) => (\n                    <Card value={card} style={get_angle(index, num_cards)} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nfunction sort(hand) {\n    const temp = hand.toString();\n    const ace_hi = temp.includes('A')\n        ? temp.includes('2') && temp.includes('3') && temp.includes('4') && temp.includes('5')\n            ? false\n            : true\n        : true;\n    const weights = {\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n        '0': 10,\n        J: 11,\n        Q: 12,\n        K: 13,\n        A: ace_hi ? 14 : 1,\n    };\n    hand.sort((a, b) => {\n        return weights[a[0]] - weights[b[0]];\n    });\n}\n\nexport default Hand;\n","import React from 'react';\nimport './App.css';\nimport Deck from './game-engine/components/Deck';\nimport Hand from './game-engine/components/Hand/Hand';\n\nconst App = props => {\n    const deck1 = new Deck();\n    deck1.shuffle();\n    const cards = [deck1.deal(), deck1.deal(), deck1.deal(), deck1.deal(), deck1.deal(), deck1.deal()];\n    return (\n        <div>\n            <Hand cards={cards} />\n            <Hand cards={cards} />\n            <Hand cards={cards} />\n            <Hand cards={cards} />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}